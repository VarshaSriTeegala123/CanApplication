
pipeline {
  agent any
  tools {
  nodejs "NODE"
  maven "maven3.6.3"
  }
  environment {
        buildnumber = "${BUILD_NUMBER}"
        jobName    = "${env.JOB_NAME}"
        branchName = "${BRANCH_NAME}"
    }
  stages{

 
  
     
    stage('SCM Checkout'){
	steps {
         script {
      // Checkout the repository and save the resulting metadata
      def scmVars = checkout([
        $class: 'GitSCM'
      ])
	    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GithubCredentails', url: 'https://github.com/mudaliar20/CanApplication.git']]])
	  env.GIT_COMMIT = scmVars.GIT_COMMIT
         
          echo "GIT_COMMIT=${env.GIT_COMMIT}" >> variables.txt
           echo "${buildnumber}" >>  variables.txt
           echo "${jobName}"  >> variables.txt
          echo GitBranch " echo getGitBranchName() " >> variables.txt
          echo env.BRANCH_NAME  >>  variables.txt
          echo determineRepoName "echo determineRepoName()" >> variables.txt
          echo determineRepoURL "echo determineRepoURL()" >> variables.txt
    }
	}
  }
}
}

String determineRepoName() {
    return scm.getUserRemoteConfigs()[0].getUrl().tokenize('/')[3].split("\\.")[0]
}
String determineRepoURL() {
    return scm.getUserRemoteConfigs()[0].getUrl()
}
String getGitBranchName() {
    return scm.branches[0].name.tokenize("*")[0].split("\\/")[1]
}

